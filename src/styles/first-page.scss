.about-page {
  display: flex;
  flex-direction: column; // default: column (mobile-first)
  // gap: 1.5rem;
  padding: 1rem;
  // min-height: 100vh;
  position: relative;
  z-index: 100; // Ensure it's above the star background

  .about-me-section {
    flex: 1;
    border-radius: 1rem;
    color: #ffffff;
    text-align: left;
    width: 50vw;
    margin: 0 auto;
    position: relative;
    z-index: 101;
    font-size: clamp(0.5rem, 1.5vw, 1.5rem);

    h2 {
      font-size: 2rem;
      font-weight: 700;
      margin-bottom: 1rem;
      background: linear-gradient(135deg, #5217a0, #120a7d, #36071e);
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
      background-size: 400% 400%;
      animation: gradientMove 6s ease infinite;
    }

    p {
      font-size: 1.1rem;
      line-height: 1.7;
      margin-bottom: 1rem;
      color: rgba(255, 255, 255, 0.85);
    }

    .cta-buttons {
      display: flex;
      gap: 1rem;
      margin-top: 1.5rem;

      .cta-btn {
        padding: 0.8rem 1.6rem;
        border-radius: 0.5rem;
        font-weight: 600;
        text-decoration: none;
        transition: transform 0.3s ease, box-shadow 0.3s ease;
        cursor: pointer;

        &.primary {
          background: linear-gradient(135deg, #7d2ae8, #00c6ff);
          color: #fff;
          box-shadow: 0 0 15px rgba(125, 42, 232, 0.5);
        }

        &.secondary {
          border: 2px solid #00c6ff;
          color: #00c6ff;
          background: transparent;
        }

        &:hover {
          transform: translateY(-3px);
          box-shadow: 0 0 20px rgba(125, 42, 232, 0.6);
        }
      }
    }
  }

  /* Reuse gradient animation */
  @keyframes gradientMove {
    0% {
      background-position: 0% 50%;
    }
    50% {
      background-position: 100% 50%;
    }
    100% {
      background-position: 0% 50%;
    }
  }

  // .hero-heading {
  //   text-align: center;
  //   background: linear-gradient(135deg, #7d2ae8, #00c6ff, #ff0080);
  //   -webkit-background-clip: text;
  //   -webkit-text-fill-color: transparent;
  //   background-size: 400% 400%;
  //   animation: gradientMove 6s ease infinite;
  //   text-shadow: 0 0 10px rgba(125, 42, 232, 0.5),
  //     0 0 20px rgba(0, 198, 255, 0.4), 0 0 30px rgba(255, 0, 128, 0.3);
  // }

  /* Animated gradient for galaxy effect */
  @keyframes gradientMove {
    0% {
      background-position: 0% 50%;
    }
    50% {
      background-position: 100% 50%;
    }
    100% {
      background-position: 0% 50%;
    }
  }

  .profile-photo {
    flex: 1;
    position: relative;
    width: 250px;
    height: 250px;
    border-radius: 50%;
    margin-inline: auto;
    overflow: visible;

    @media (max-width: 768px) {
      width: 200px;
      height: 200px;
    }
    @media (max-width: 480px) {
      width: 150px;
      height: 150px;
    }

    img {
      width: 100%;
      height: 100%;
      border-radius: 50%;
      object-fit: cover;
      transition: transform 0.3s ease, box-shadow 0.3s ease;

      /* Subtle animated pulse glow */
      box-shadow: 0 0 20px rgba(125, 42, 232, 0.6);
      animation: pulseGlow 2.5s infinite alternate;
    }

    &:hover img {
      transform: scale(1.05);
    }
  }

  .photo-section {
    width: 50vw;
    color: white;
    text-align: center;
    position: relative;
    z-index: 101;
  }

  /* Keyframes for pulse glow */
  @keyframes pulseGlow {
    0% {
      box-shadow: 0 0 15px rgba(125, 42, 232, 0.5);
    }
    50% {
      box-shadow: 0 0 25px rgba(125, 42, 232, 0.7);
    }
    100% {
      box-shadow: 0 0 20px rgba(125, 42, 232, 0.6);
    }
  }

  /* ðŸ”¥ Keyframes for animated gradient */
  @keyframes glowing-border {
    0% {
      background-position: 0% 50%;
    }
    50% {
      background-position: 100% 50%;
    }
    100% {
      background-position: 0% 50%;
    }
  }

  // Typing animation mixin
  @mixin typed($texts...) {
    $text-list: ();
    $duration: 1.5s; // default duration
    $options: ();

    // Parse arguments to separate texts, duration, and options
    @each $item in $texts {
      @if type-of($item) == number {
        $duration: $item;
      } @else if type-of($item) == map {
        $options: $item;
      } @else if type-of($item) == string {
        $text-list: append($text-list, $item);
      }
    }

    $text-count: length($text-list);
    $caret-width: 2px;
    $caret-space: 2px;

    // Extract options
    @if map-has-key($options, caret-width) {
      $caret-width: map-get($options, caret-width);
    }
    @if map-has-key($options, caret-space) {
      $caret-space: map-get($options, caret-space);
    }

    position: absolute;
    top: 0;
    left: 0;
    white-space: nowrap;
    overflow: hidden;

    // Cursor/caret styling
    &::after {
      content: "";
      display: inline-block;
      width: $caret-width;
      height: 1.2em;
      background-color: currentColor;
      margin-left: $caret-space;
      animation: blink 1s infinite;
      vertical-align: top;
    }

    // Dynamic content and animation based on text list
    &::before {
      @if $text-count > 0 {
        content: nth($text-list, 1);

        @if $text-count > 1 {
          $total-duration: $duration *
            $text-count *
            3; // type, pause, erase cycle
          animation: text-sequence-#{unique-id()} $total-duration infinite,
            typing-sequence-#{unique-id()} $total-duration infinite;

          // Generate unique keyframes for this instance
          @at-root {
            @keyframes text-sequence-#{unique-id()} {
              @for $i from 1 through $text-count {
                $start-percent: ($i - 1) * (100% / $text-count);
                $end-percent: $i * (100% / $text-count) - 0.01%;

                #{$start-percent},
                #{$end-percent} {
                  content: nth($text-list, $i);
                }
              }
            }

            @keyframes typing-sequence-#{unique-id()} {
              @for $i from 1 through $text-count {
                $cycle-percent: 100% / $text-count;
                $start: ($i - 1) * $cycle-percent;
                $type-end: $start + ($cycle-percent * 0.6); // 60% for typing
                $pause-end: $start + ($cycle-percent * 0.75); // 15% for pause
                $erase-end: $start + ($cycle-percent * 0.9); // 15% for erasing

                #{$start} {
                  width: 0;
                }
                #{$type-end} {
                  width: 100%;
                }
                #{$pause-end} {
                  width: 100%;
                }
                #{$erase-end} {
                  width: 0;
                }

                @if $i == $text-count {
                  100% {
                    width: 0;
                  }
                }
              }
            }
          }
        } @else {
          // Single text - just type once
          animation: single-typing
              $duration
              steps(#{str-length(nth($text-list, 1))}, end)
              infinite,
            blink 1s infinite;
        }
      }
    }
  }

  // Base keyframes
  @keyframes blink {
    0%,
    50% {
      opacity: 1;
    }
    51%,
    100% {
      opacity: 0;
    }
  }

  @keyframes single-typing {
    0% {
      width: 0;
    }
    70% {
      width: 100%;
    }
    100% {
      width: 100%;
    }
  }

  .resume-button {
    margin-top: 1rem;
    background: linear-gradient(90deg, #9c6eff, #6e8bff);
    color: #fff;
    border: none;
    padding: 0.8rem 2rem;
    border-radius: 999px;
    font-weight: 600;
    cursor: pointer;
    transition: all 0.3s ease;

    &:hover {
      box-shadow: 0 0 15px rgba(156, 110, 255, 0.6);
      transform: scale(1.05);
    }
  }

  // Main styles
  body {
    display: grid;
    height: 100vh;
    place-items: center;
    width: 100%;
    margin: 0;
    background-color: #1a1a1a;
    color: #ffffff;
  }

  .input-wrapper {
    display: block;
    font-family: "Courier New", monospace;
    font-size: 125%;
    width: 50%;
    position: relative;
    min-width: 300px;

    > input,
    > .placeholder {
      display: block;
      appearance: none;
      width: 100%;
      height: 100%;
      background-color: transparent;
      border: none;
      font-family: inherit;
      font-size: inherit;
      color: inherit;
      padding: 12px 0;
      outline: none;
    }

    > .placeholder {
      pointer-events: none;
    }

    > input {
      border-bottom: 1px solid #444;
      transition: border-color 0.3s ease;

      &:focus,
      &:active {
        border-bottom-color: #007acc;

        + .placeholder {
          display: none;
        }
      }

      &::placeholder {
        color: transparent;
      }
    }
  }

  .typing-container {
    margin: 10px;

    .typing-text {
      text-align: center;
      font-size: clamp(1rem, 2.5vw, 1.5rem);
      background: linear-gradient(135deg, #7d2ae8, #00c6ff, #ff0080);
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
      background-size: 400% 400%;
      animation: gradientMove 6s ease infinite;
      text-shadow: 0 0 10px rgba(125, 42, 232, 0.5),
        0 0 20px rgba(0, 198, 255, 0.4), 0 0 30px rgba(255, 0, 128, 0.3);
    }
  }

  .glowing-badge {
    display: inline-block;
    padding: 0.4rem 1rem;
    font-size: clamp(0.5rem, 1.5vw, 1.5rem);
    font-weight: 600;
    border-radius: 9999px;
    text-transform: uppercase;
    letter-spacing: 0.8px;
    position: relative;
    cursor: default;
    z-index: 1;

    // Theme-dependent colors
    background: rgba(125, 42, 232, 0.15);
    color: #fff;
    border: 1px solid rgba(125, 42, 232, 0.4);

    // Glowing effect
    box-shadow: 0 0 8px rgba(125, 42, 232, 0.6),
      0 0 15px rgba(125, 42, 232, 0.4);

    // Smooth transition
    transition: all 0.3s ease-in-out;

    // Subtle hover effect
    &:hover {
      transform: scale(1.05);
      box-shadow: 0 0 12px rgba(125, 42, 232, 0.8),
        0 0 20px rgba(125, 42, 232, 0.6);
    }

    // Dark & light theme handling
    body.light-mode & {
      background: rgba(0, 0, 0, 0.05);
      color: #000;
      border: 1px solid rgba(0, 0, 0, 0.2);
      box-shadow: 0 0 6px rgba(0, 0, 0, 0.2);

      &:hover {
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.4);
      }
    }
  }

  /* Responsive */
  @media (max-width: 768px) {
    .input-wrapper {
      width: 90%;
      font-size: 100%;
    }
    .about-me-section {
      text-align: center;

      .cta-buttons {
        flex-direction: column;
        gap: 0.8rem;
        align-items: center;
      }
    }
    .typing-text {
      font-size: 23px;
    }
    .photo-section {
      width: 100%;
      color: white;
      text-align: center;
      position: relative;
      z-index: 101;
      padding-bottom: 20px;
    }
    .about-me-section {
      text-align: center;
      color: #ffffff;
      width: 100%;
    }
  }

  @media (min-width: 768px) {
    flex-direction: row;
    align-items: center;
    justify-content: space-around;
  }

  @media (max-width: 480px) {
    .typing-text {
      font-size: 0px;
    }
    .photo-section {
      width: 100%;
      color: white;
      text-align: center;
      position: relative;
      z-index: 101;
      padding-bottom: 20px;
    }
    .about-me-section {
      text-align: center;
      color: #ffffff;
      width: 100%;
    }
  }
}
